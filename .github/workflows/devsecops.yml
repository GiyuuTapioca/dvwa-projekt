name: DevSecOps CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build DVWA image from Dockerfile
        run: docker build -t dvwa .

  sca:
    name: Dependency Scan (SCA)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run pip-audit
        run: |
          pip install -r requirements.txt
          pip install pip-audit
          pip-audit --format json --output sca-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: sca-report
          path: sca-report.json

  sast:
    name: Static Code Analysis (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          docker run --rm -v ${{ github.workspace }}:/src returntocorp/semgrep semgrep --config=auto --json > semgrep-output.json
      - uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-output.json

  secrets:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run GitLeaks
        run: |
          docker run --rm -v ${{ github.workspace }}:/repo zricethezav/gitleaks detect --source=/repo --report-format=json --report-path=/repo/gitleaks-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  dast:
    name: DAST Scan with NIKTO
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and run DVWA container
        run: |
          docker build -t dvwa .
          docker run -d --rm --name dvwa -p 3000:80 dvwa
          echo "Waiting for DVWA to be available..."
          until curl -s http://localhost:3000 > /dev/null; do
            echo "waiting for DVWA..."
            sleep 5
          done

      - name: Nikto Scan
        run: |
          sudo apt-get update
          sudo apt-get install -y nikto
          nikto -h http://localhost:3000 -o nikto-report.txt -Format txt

      - name: Upload Nikto report
        uses: actions/upload-artifact@v4
        with:
          name: nikto-report
          path: nikto-report.txt
      
      - name: Stop container
        run: docker stop dvwa

  trivy:
    name: Docker Image Scan (Trivy)
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Scan Docker image with Trivy
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --exit-code 1 --severity HIGH,CRITICAL --format table dvwa > trivy-report.txt || true
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

  release:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [build, trivy]
    steps:
      - uses: actions/checkout@v4

      - name: Build Image
        run: docker build -t dvwa .
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag dvwa:latest ${{ secrets.DOCKERHUB_USERNAME }}/dvwa:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dvwa:latest
